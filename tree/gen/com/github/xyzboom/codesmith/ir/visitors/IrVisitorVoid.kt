

// This file was generated automatically. See README.md.
// DO NOT MODIFY IT MANUALLY.

package com.github.xyzboom.codesmith.ir.visitors

import com.github.xyzboom.codesmith.ir.IrElement
import com.github.xyzboom.codesmith.ir.IrProgram
import com.github.xyzboom.codesmith.ir.containers.IrClassContainer
import com.github.xyzboom.codesmith.ir.containers.IrFuncContainer
import com.github.xyzboom.codesmith.ir.containers.IrTypeParameterContainer
import com.github.xyzboom.codesmith.ir.declarations.IrClassDeclaration
import com.github.xyzboom.codesmith.ir.declarations.IrDeclaration
import com.github.xyzboom.codesmith.ir.declarations.IrFunctionDeclaration
import com.github.xyzboom.codesmith.ir.types.IrType
import com.github.xyzboom.codesmith.ir.types.IrTypeParameter

/**
 * Auto-generated by [com.github.xyzboom.codesmith.tree.generator.printer.VisitorVoidPrinter]
 */
abstract class IrVisitorVoid : IrVisitor<Unit, Nothing?>() {

    final override fun visitElement(element: IrElement, data: Nothing?) {
        visitElement(element)
    }

    abstract fun visitElement(element: IrElement)

    final override fun visitProgram(program: IrProgram, data: Nothing?) {
        visitProgram(program)
    }

    open fun visitProgram(program: IrProgram) {
        visitElement(program)
    }

    final override fun visitDeclaration(declaration: IrDeclaration, data: Nothing?) {
        visitDeclaration(declaration)
    }

    open fun visitDeclaration(declaration: IrDeclaration) {
        visitElement(declaration)
    }

    final override fun visitClassDeclaration(classDeclaration: IrClassDeclaration, data: Nothing?) {
        visitClassDeclaration(classDeclaration)
    }

    open fun visitClassDeclaration(classDeclaration: IrClassDeclaration) {
        visitElement(classDeclaration)
    }

    final override fun visitFunctionDeclaration(functionDeclaration: IrFunctionDeclaration, data: Nothing?) {
        visitFunctionDeclaration(functionDeclaration)
    }

    open fun visitFunctionDeclaration(functionDeclaration: IrFunctionDeclaration) {
        visitElement(functionDeclaration)
    }

    final override fun visitClassContainer(classContainer: IrClassContainer, data: Nothing?) {
        visitClassContainer(classContainer)
    }

    open fun visitClassContainer(classContainer: IrClassContainer) {
        visitElement(classContainer)
    }

    final override fun visitFuncContainer(funcContainer: IrFuncContainer, data: Nothing?) {
        visitFuncContainer(funcContainer)
    }

    open fun visitFuncContainer(funcContainer: IrFuncContainer) {
        visitElement(funcContainer)
    }

    final override fun visitTypeParameterContainer(typeParameterContainer: IrTypeParameterContainer, data: Nothing?) {
        visitTypeParameterContainer(typeParameterContainer)
    }

    open fun visitTypeParameterContainer(typeParameterContainer: IrTypeParameterContainer) {
        visitElement(typeParameterContainer)
    }

    final override fun visitType(type: IrType, data: Nothing?) {
        visitType(type)
    }

    open fun visitType(type: IrType) {
        visitElement(type)
    }

    final override fun visitTypeParameter(typeParameter: IrTypeParameter, data: Nothing?) {
        visitTypeParameter(typeParameter)
    }

    open fun visitTypeParameter(typeParameter: IrTypeParameter) {
        visitElement(typeParameter)
    }
}
