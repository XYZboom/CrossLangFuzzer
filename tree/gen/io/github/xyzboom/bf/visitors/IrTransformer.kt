

// This file was generated automatically. See README.md.
// DO NOT MODIFY IT MANUALLY.

package io.github.xyzboom.bf.visitors

import io.github.xyzboom.bf.IrContainer
import io.github.xyzboom.bf.IrElement
import io.github.xyzboom.bf.IrProgram
import io.github.xyzboom.bf.declarations.IrClassDeclaration
import io.github.xyzboom.bf.declarations.IrDeclaration

/**
 * Auto-generated by [io.github.xyzboom.crosslangfuzzer.tree.generator.printer.TransformerPrinter]
 */
abstract class IrTransformer<in D> : IrVisitor<IrElement, D>() {

    abstract fun <E : IrElement> transformElement(element: E, data: D): E

    final override fun visitElement(element: IrElement, data: D): IrElement {
        return transformElement(element, data)
    }

    open fun transformProgram(program: IrProgram, data: D): IrProgram {
        return transformElement(program, data)
    }

    final override fun visitProgram(program: IrProgram, data: D): IrProgram {
        return transformProgram(program, data)
    }

    open fun transformDeclaration(declaration: IrDeclaration, data: D): IrDeclaration {
        return transformElement(declaration, data)
    }

    final override fun visitDeclaration(declaration: IrDeclaration, data: D): IrDeclaration {
        return transformDeclaration(declaration, data)
    }

    open fun transformClassDeclaration(classDeclaration: IrClassDeclaration, data: D): IrClassDeclaration {
        return transformElement(classDeclaration, data)
    }

    final override fun visitClassDeclaration(classDeclaration: IrClassDeclaration, data: D): IrClassDeclaration {
        return transformClassDeclaration(classDeclaration, data)
    }

    open fun transformContainer(container: IrContainer, data: D): IrContainer {
        return transformElement(container, data)
    }

    final override fun visitContainer(container: IrContainer, data: D): IrContainer {
        return transformContainer(container, data)
    }
}
